// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebNews.Data.EF;

#nullable disable

namespace WebNews.Data.Migrations
{
    [DbContext(typeof(WebNewsDbContext))]
    [Migration("20231029142105_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebNews.Data.Entities.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("WebNews.Data.Entities.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("article_id")
                        .HasColumnType("int");

                    b.Property<int>("author_id")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date_published")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("WebNews.Data.Entities.News", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("Image")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("author_id")
                        .HasColumnType("int");

                    b.Property<int>("category_id")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("News", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(2023, 10, 29, 21, 21, 5, 453, DateTimeKind.Local).AddTicks(3004),
                            Image = 0,
                            Status = 1,
                            Title = "du bao thoi tiet",
                            author_id = 1,
                            category_id = 1,
                            content = "Hnay troi co mua"
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(2023, 10, 29, 21, 21, 5, 453, DateTimeKind.Local).AddTicks(3020),
                            Image = 0,
                            Status = 1,
                            Title = "Gia xang tang",
                            author_id = 2,
                            category_id = 2,
                            content = "Xang hon nay tang them 2000d"
                        },
                        new
                        {
                            ID = 3,
                            DateCreated = new DateTime(2023, 10, 29, 21, 21, 5, 453, DateTimeKind.Local).AddTicks(3021),
                            Image = 0,
                            Status = 1,
                            Title = "Tong Thong My tham Viet Nam",
                            author_id = 1,
                            category_id = 3,
                            content = "Tong thong My da den va tham Viet Nam vao hom nay"
                        });
                });

            modelBuilder.Entity("WebNews.Data.Entities.NewsInUser", b =>
                {
                    b.Property<int>("author_id")
                        .HasColumnType("int");

                    b.Property<int>("category_id")
                        .HasColumnType("int");

                    b.HasKey("author_id", "category_id");

                    b.HasIndex("category_id");

                    b.ToTable("NewsInUser", (string)null);

                    b.HasData(
                        new
                        {
                            author_id = 1,
                            category_id = 1
                        });
                });

            modelBuilder.Entity("WebNews.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("0");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ThanhLong@gmail.com",
                            Name = "Long",
                            Password = "123",
                            Role = "Tac Gia"
                        },
                        new
                        {
                            Id = 2,
                            Email = "LeMinh@gmail.com",
                            Name = "Minh",
                            Password = "456",
                            Role = "Tac Gia"
                        });
                });

            modelBuilder.Entity("WebNews.Data.Entities.NewsInUser", b =>
                {
                    b.HasOne("WebNews.Data.Entities.User", "User")
                        .WithMany("NewsInUsers")
                        .HasForeignKey("author_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebNews.Data.Entities.News", "News")
                        .WithMany("NewsInUsers")
                        .HasForeignKey("category_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebNews.Data.Entities.News", b =>
                {
                    b.Navigation("NewsInUsers");
                });

            modelBuilder.Entity("WebNews.Data.Entities.User", b =>
                {
                    b.Navigation("NewsInUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
